{"mappings":"ACGA,IAAM,EAAO,SAAS,aAAa,CAAC,SAG9B,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,UACnB,EAAG,IACL,GAUA,QAAQ,UAAU,CAAC,CAPF,IAAI,QAAQ,SAAC,CAA9B,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,eACV,EACF,GAG8B,EAAS,EAAE,IAAI,CAAC,SAAC,CAAR,EACrC,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,GAAI,AAAkB,aAAlB,EAAO,MAAM,CAAiB,CAChC,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,SAAS,CAAC,GAAG,CAAC,UAAW,iBACtC,SAAS,IAAI,CAAC,MAAM,CAAC,GACrB,EAAa,WAAW,CAAG,uBAC7B,CAEA,GAAI,AAAkB,cAAlB,EAAO,MAAM,CAAkB,CACjC,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,SAAS,CAAC,GAAG,CAAC,WACtB,SAAS,IAAI,CAAC,MAAM,CAAC,GACrB,EAAQ,WAAW,CAAG,uBACxB,CACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write your code here\nvar logo = document.querySelector(\".logo\");\n// Create promise2 immediately, so it starts rejecting after 2 seconds\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"reject\"));\n    }, 2000);\n});\n// Create promise1 which resolves on logo click\nvar promise1 = new Promise(function(resolve) {\n    logo.addEventListener(\"click\", function() {\n        resolve(\"logo clicked\");\n    });\n});\n// Use Promise.allSettled to handle both\nPromise.allSettled([\n    promise1,\n    promise2\n]).then(function(results) {\n    results.forEach(function(result) {\n        if (result.status === \"rejected\") {\n            var errorMessage = document.createElement(\"div\");\n            errorMessage.classList.add(\"message\", \"error-message\");\n            document.body.append(errorMessage);\n            errorMessage.textContent = \"Promise was rejected!\";\n        }\n        if (result.status === \"fulfilled\") {\n            var message = document.createElement(\"div\");\n            message.classList.add(\"message\");\n            document.body.append(message);\n            message.textContent = \"Promise was resolved!\";\n        }\n    });\n});\n\n//# sourceMappingURL=index.b8a54c06.js.map\n","'use strict';\n\n// write your code here\nconst logo = document.querySelector('.logo');\n\n// Create promise2 immediately, so it starts rejecting after 2 seconds\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('reject'));\n  }, 2000);\n});\n\n// Create promise1 which resolves on logo click\nconst promise1 = new Promise((resolve) => {\n  logo.addEventListener('click', () => {\n    resolve('logo clicked');\n  });\n});\n\n// Use Promise.allSettled to handle both\nPromise.allSettled([promise1, promise2]).then((results) => {\n  results.forEach((result) => {\n    if (result.status === 'rejected') {\n      const errorMessage = document.createElement('div');\n\n      errorMessage.classList.add('message', 'error-message');\n      document.body.append(errorMessage);\n      errorMessage.textContent = 'Promise was rejected!';\n    }\n\n    if (result.status === 'fulfilled') {\n      const message = document.createElement('div');\n\n      message.classList.add('message');\n      document.body.append(message);\n      message.textContent = 'Promise was resolved!';\n    }\n  });\n});\n"],"names":["logo","document","querySelector","promise2","Promise","resolve","reject","setTimeout","Error","allSettled","addEventListener","then","results","forEach","result","status","errorMessage","createElement","classList","add","body","append","textContent","message"],"version":3,"file":"index.b8a54c06.js.map"}